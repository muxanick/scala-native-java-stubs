package javax.swing.plaf.multi

import java.awt.{Dimension, Graphics, Point, Rectangle}
import java.lang.{Object, String}
import java.util.Vector
import javax.accessibility.Accessible
import javax.swing.JComponent
import javax.swing.plaf.{ComponentUI, TextUI}
import javax.swing.text.{EditorKit, JTextComponent, Position.Bias, View}
import scala.scalanative.annotation.stub

/** A multiplexing UI used to combine TextUIs.
 * 
 *  This file was automatically generated by AutoMulti.
 */
class MultiTextUI extends TextUI {

    /**  */
    @stub
    def this() = ???

    /** The vector containing the real UIs. */
    @stub
    protected val uis: Vector = ???

    /** Invokes the contains method on each UI handled by this object. */
    @stub
    def contains(a: JComponent, b: Int, c: Int): Boolean = ???

    /** Invokes the damageRange method on each UI handled by this object. */
    @stub
    def damageRange(a: JTextComponent, b: Int, c: Int): Unit = ???

    /** Invokes the damageRange method on each UI handled by this object. */
    @stub
    def damageRange(a: JTextComponent, b: Int, c: Int, d: Position.Bias, e: Position.Bias): Unit = ???

    /** Invokes the getAccessibleChild method on each UI handled by this object. */
    @stub
    def getAccessibleChild(a: JComponent, b: Int): Accessible = ???

    /** Invokes the getAccessibleChildrenCount method on each UI handled by this object. */
    @stub
    def getAccessibleChildrenCount(a: JComponent): Int = ???

    /** Invokes the getEditorKit method on each UI handled by this object. */
    @stub
    def getEditorKit(a: JTextComponent): EditorKit = ???

    /** Invokes the getMaximumSize method on each UI handled by this object. */
    @stub
    def getMaximumSize(a: JComponent): Dimension = ???

    /** Invokes the getMinimumSize method on each UI handled by this object. */
    @stub
    def getMinimumSize(a: JComponent): Dimension = ???

    /** Invokes the getNextVisualPositionFrom method on each UI handled by this object. */
    @stub
    def getNextVisualPositionFrom(a: JTextComponent, b: Int, c: Position.Bias, d: Int, e: Array[Position.Bias]): Int = ???

    /** Invokes the getPreferredSize method on each UI handled by this object. */
    @stub
    def getPreferredSize(a: JComponent): Dimension = ???

    /** Invokes the getRootView method on each UI handled by this object. */
    @stub
    def getRootView(a: JTextComponent): View = ???

    /** Invokes the getToolTipText method on each UI handled by this object. */
    @stub
    def getToolTipText(a: JTextComponent, b: Point): String = ???

    /** Returns the list of UIs associated with this multiplexing UI. */
    @stub
    def getUIs(): Array[ComponentUI] = ???

    /** Invokes the installUI method on each UI handled by this object. */
    @stub
    def installUI(a: JComponent): Unit = ???

    /** Invokes the modelToView method on each UI handled by this object. */
    @stub
    def modelToView(a: JTextComponent, b: Int): Rectangle = ???

    /** Invokes the modelToView method on each UI handled by this object. */
    @stub
    def modelToView(a: JTextComponent, b: Int, c: Position.Bias): Rectangle = ???

    /** Invokes the paint method on each UI handled by this object. */
    @stub
    def paint(a: Graphics, b: JComponent): Unit = ???

    /** Invokes the uninstallUI method on each UI handled by this object. */
    @stub
    def uninstallUI(a: JComponent): Unit = ???

    /** Invokes the update method on each UI handled by this object. */
    @stub
    def update(a: Graphics, b: JComponent): Unit = ???

    /** Invokes the viewToModel method on each UI handled by this object. */
    @stub
    def viewToModel(a: JTextComponent, b: Point): Int = ???

    /** Invokes the viewToModel method on each UI handled by this object. */
    @stub
    def viewToModel(a: JTextComponent, b: Point, c: Array[Position.Bias]): Int = ???
}

object MultiTextUI {
    /** Returns a multiplexing UI instance if any of the auxiliary
     *  LookAndFeels supports this UI.
     */
    @stub
    def createUI(a: JComponent): ComponentUI = ???
}
