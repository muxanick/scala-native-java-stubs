package javax.swing.plaf.multi

import java.awt.{Dimension, Graphics, Point, Rectangle}
import java.lang.{Object, String}
import javax.accessibility.Accessible
import javax.swing.JComponent
import javax.swing.plaf.{ComponentUI, TextUI}
import javax.swing.text.{EditorKit, JTextComponent, Position.Bias, View}

// A multiplexing UI used to combine TextUIs.
//
// This file was automatically generated by AutoMulti.
class MultiTextUI extends TextUI {

    @stub
    // Invokes the contains method on each UI handled by this object.
    def contains(a: JComponent, b: Int, c: Int): Boolean = ???

    @stub
    // Invokes the damageRange method on each UI handled by this object.
    def damageRange(a: JTextComponent, b: Int, c: Int): Unit = ???

    @stub
    // Invokes the damageRange method on each UI handled by this object.
    def damageRange(a: JTextComponent, b: Int, c: Int, d: Position.Bias, e: Position.Bias): Unit = ???

    @stub
    // Invokes the getAccessibleChild method on each UI handled by this object.
    def getAccessibleChild(a: JComponent, b: Int): Accessible = ???

    @stub
    // Invokes the getAccessibleChildrenCount method on each UI handled by this object.
    def getAccessibleChildrenCount(a: JComponent): Int = ???

    @stub
    // Invokes the getEditorKit method on each UI handled by this object.
    def getEditorKit(a: JTextComponent): EditorKit = ???

    @stub
    // Invokes the getMaximumSize method on each UI handled by this object.
    def getMaximumSize(a: JComponent): Dimension = ???

    @stub
    // Invokes the getMinimumSize method on each UI handled by this object.
    def getMinimumSize(a: JComponent): Dimension = ???

    @stub
    // Invokes the getNextVisualPositionFrom method on each UI handled by this object.
    def getNextVisualPositionFrom(a: JTextComponent, b: Int, c: Position.Bias, d: Int, e: Array[Position.Bias]): Int = ???

    @stub
    // Invokes the getPreferredSize method on each UI handled by this object.
    def getPreferredSize(a: JComponent): Dimension = ???

    @stub
    // Invokes the getRootView method on each UI handled by this object.
    def getRootView(a: JTextComponent): View = ???

    @stub
    // Invokes the getToolTipText method on each UI handled by this object.
    def getToolTipText(a: JTextComponent, b: Point): String = ???

    @stub
    // Returns the list of UIs associated with this multiplexing UI.
    def getUIs(): Array[ComponentUI] = ???

    @stub
    // Invokes the installUI method on each UI handled by this object.
    def installUI(a: JComponent): Unit = ???

    @stub
    // Invokes the modelToView method on each UI handled by this object.
    def modelToView(a: JTextComponent, b: Int): Rectangle = ???

    @stub
    // Invokes the modelToView method on each UI handled by this object.
    def modelToView(a: JTextComponent, b: Int, c: Position.Bias): Rectangle = ???

    @stub
    // Invokes the paint method on each UI handled by this object.
    def paint(a: Graphics, b: JComponent): Unit = ???

    @stub
    // Invokes the uninstallUI method on each UI handled by this object.
    def uninstallUI(a: JComponent): Unit = ???

    @stub
    // Invokes the update method on each UI handled by this object.
    def update(a: Graphics, b: JComponent): Unit = ???

    @stub
    // Invokes the viewToModel method on each UI handled by this object.
    def viewToModel(a: JTextComponent, b: Point): Int = ???
}

object MultiTextUI {
    @stub
    // Returns a multiplexing UI instance if any of the auxiliary
    // LookAndFeels supports this UI.
    def createUI(a: JComponent): ComponentUI = ???
}
