package java.awt.event

import java.awt.{AWTEvent, Component}
import java.lang.{Object, String}
import java.util.EventObject
import scala.scalanative.annotation.stub

/** A low-level event which indicates that a component moved, changed
 *  size, or changed visibility (also, the root class for the other
 *  component-level events).
 *  
 *  Component events are provided for notification purposes ONLY;
 *  The AWT will automatically handle component moves and resizes
 *  internally so that GUI layout works properly regardless of
 *  whether a program is receiving these events or not.
 *  
 *  In addition to serving as the base class for other component-related
 *  events (InputEvent, FocusEvent, WindowEvent, ContainerEvent),
 *  this class defines the events that indicate changes in
 *  a component's size, position, or visibility.
 *  
 *  This low-level event is generated by a component object (such as a
 *  List) when the component is moved, resized, rendered invisible, or made
 *  visible again. The event is passed to every ComponentListener
 *  or ComponentAdapter object which registered to receive such
 *  events using the component's addComponentListener method.
 *  (ComponentAdapter objects implement the
 *  ComponentListener interface.) Each such listener object
 *  gets this ComponentEvent when the event occurs.
 *  
 *  An unspecified behavior will be caused if the id parameter
 *  of any particular ComponentEvent instance is not
 *  in the range from COMPONENT_FIRST to COMPONENT_LAST.
 */
class ComponentEvent extends AWTEvent {

    /** Constructs a ComponentEvent object. */
    @stub
    def this(source: Component, id: Int) = ???

    /** Returns the originator of the event. */
    @stub
    def getComponent(): Component = ???

    /** Returns a parameter string identifying this event. */
    @stub
    def paramString(): String = ???
}

object ComponentEvent {
    /** The first number in the range of ids used for component events. */
    @stub
    val COMPONENT_FIRST: Int = ???

    /** This event indicates that the component was rendered invisible. */
    @stub
    val COMPONENT_HIDDEN: Int = ???

    /** The last number in the range of ids used for component events. */
    @stub
    val COMPONENT_LAST: Int = ???

    /** This event indicates that the component's position changed. */
    @stub
    val COMPONENT_MOVED: Int = ???

    /** This event indicates that the component's size changed. */
    @stub
    val COMPONENT_RESIZED: Int = ???

    /** This event indicates that the component was made visible. */
    @stub
    val COMPONENT_SHOWN: Int = ???
}
