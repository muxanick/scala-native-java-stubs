package java.awt.event

import java.awt.AWTEvent
import java.lang.{Object, String}
import java.util.EventObject
import scala.scalanative.annotation.stub

/** A semantic event which indicates that an object's text changed.
 *  This high-level event is generated by an object (such as a TextComponent)
 *  when its text changes. The event is passed to
 *  every TextListener object which registered to receive such
 *  events using the component's addTextListener method.
 *  
 *  The object that implements the TextListener interface gets
 *  this TextEvent when the event occurs. The listener is
 *  spared the details of processing individual mouse movements and key strokes
 *  Instead, it can process a "meaningful" (semantic) event like "text changed".
 *  
 *  An unspecified behavior will be caused if the id parameter
 *  of any particular TextEvent instance is not
 *  in the range from TEXT_FIRST to TEXT_LAST.
 */
class TextEvent extends AWTEvent {

    /** Constructs a TextEvent object. */
    @stub
    def this(source: Any, id: Int) = ???

    /** Returns a parameter string identifying this text event. */
    @stub
    def paramString(): String = ???
}

object TextEvent {
    /** The first number in the range of ids used for text events. */
    @stub
    val TEXT_FIRST: Int = ???

    /** The last number in the range of ids used for text events. */
    @stub
    val TEXT_LAST: Int = ???

    /** This event id indicates that object's text changed. */
    @stub
    val TEXT_VALUE_CHANGED: Int = ???
}
