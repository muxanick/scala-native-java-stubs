package java.awt

import java.awt.event.{ActionEvent, ActionListener}
import java.lang.{Class, Object, String}
import java.util.EventListener
import javax.accessibility.AccessibleContext

// A TextField object is a text component
// that allows for the editing of a single line of text.
// 
// For example, the following image depicts a frame with four
// text fields of varying widths. Two of these text fields
// display the predefined text "Hello".
// 
// 
// 
// Here is the code that produces these four text fields:
//
// 
// TextField tf1, tf2, tf3, tf4;
// // a blank text field
// tf1 = new TextField();
// // blank field of 20 columns
// tf2 = new TextField("", 20);
// // predefined text displayed
// tf3 = new TextField("Hello!");
// // predefined text in 30 columns
// tf4 = new TextField("Hello", 30);
// 
// 
// Every time the user types a key in the text field, one or
// more key events are sent to the text field.  A KeyEvent
// may be one of three types: keyPressed, keyReleased, or keyTyped.
// The properties of a key event indicate which of these types
// it is, as well as additional information about the event,
// such as what modifiers are applied to the key event and the
// time at which the event occurred.
// 
// The key event is passed to every KeyListener
// or KeyAdapter object which registered to receive such
// events using the component's addKeyListener method.
// (KeyAdapter objects implement the
// KeyListener interface.)
// 
// It is also possible to fire an ActionEvent.
// If action events are enabled for the text field, they may
// be fired by pressing the Return key.
// 
// The TextField class's processEvent
// method examines the action event and passes it along to
// processActionEvent. The latter method redirects the
// event to any ActionListener objects that have
// registered to receive action events generated by this
// text field.
class TextField extends TextComponent {

    @stub
    // Constructs a new text field.
    def this() = ???

    @stub
    // Constructs a new empty text field with the specified number
    // of columns.
    def this(columns: Int) = ???

    @stub
    // Constructs a new text field initialized with the specified text.
    def this(text: String) = ???

    @stub
    // Adds the specified action listener to receive
    // action events from this text field.
    def addActionListener(l: ActionListener): Unit = ???

    @stub
    // Creates the TextField's peer.
    def addNotify(): Unit = ???

    @stub
    // Indicates whether or not this text field has a
    // character set for echoing.
    def echoCharIsSet(): Boolean = ???

    @stub
    // Gets the AccessibleContext associated with this TextField.
    def getAccessibleContext(): AccessibleContext = ???

    @stub
    // Returns an array of all the action listeners
    // registered on this textfield.
    def getActionListeners(): Array[ActionListener] = ???

    @stub
    // Gets the number of columns in this text field.
    def getColumns(): Int = ???

    @stub
    // Gets the character that is to be used for echoing.
    def getEchoChar(): Char = ???

    @stub
    // Returns an array of all the objects currently registered
    // as FooListeners
    // upon this TextField.
    def Array[T]: [T <: EventListener] = ???

    @stub
    // Gets the minimum dimensions for this text field.
    def getMinimumSize(): Dimension = ???

    @stub
    // Gets the minimum dimensions for a text field with
    // the specified number of columns.
    def getMinimumSize(columns: Int): Dimension = ???

    @stub
    // Gets the preferred size of this text field.
    def getPreferredSize(): Dimension = ???

    @stub
    // Gets the preferred size of this text field
    // with the specified number of columns.
    def getPreferredSize(columns: Int): Dimension = ???

    @stub
    // Deprecated. 
    //As of JDK version 1.1,
    // replaced by getMinimumSize().
    //
    def minimumSize(): Dimension = ???

    @stub
    // Deprecated. 
    //As of JDK version 1.1,
    // replaced by getMinimumSize(int).
    //
    def minimumSize(columns: Int): Dimension = ???

    @stub
    // Returns a string representing the state of this TextField.
    protected def paramString(): String = ???

    @stub
    // Deprecated. 
    //As of JDK version 1.1,
    // replaced by getPreferredSize().
    //
    def preferredSize(): Dimension = ???

    @stub
    // Deprecated. 
    //As of JDK version 1.1,
    // replaced by getPreferredSize(int).
    //
    def preferredSize(columns: Int): Dimension = ???

    @stub
    // Processes action events occurring on this text field by
    // dispatching them to any registered
    // ActionListener objects.
    protected def processActionEvent(e: ActionEvent): Unit = ???

    @stub
    // Processes events on this text field.
    protected def processEvent(e: AWTEvent): Unit = ???

    @stub
    // Removes the specified action listener so that it no longer
    // receives action events from this text field.
    def removeActionListener(l: ActionListener): Unit = ???

    @stub
    // Sets the number of columns in this text field.
    def setColumns(columns: Int): Unit = ???

    @stub
    // Sets the echo character for this text field.
    def setEchoChar(c: Char): Unit = ???

    @stub
    // Deprecated. 
    //As of JDK version 1.1,
    // replaced by setEchoChar(char).
    //
    def setEchoCharacter(c: Char): Unit = ???
}
